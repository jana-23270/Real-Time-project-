# -*- coding: utf-8 -*-
"""real time project about sales_report.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z4nkLv6huCFM0RjoxduFzbPsikApVlnK
"""

import numpy as np
import pandas as pd

data = pd.read_csv('/content/Detailed-Sales-Report.csv')

data.head(4)

data.tail(5)

data.shape

data.info()

data.describe()

data.describe().T

data.isnull().sum()

datas = data.drop(['PRODUCT_CODE','TAX','TAXABLE'],axis=1)

datas

datas.shape

datas['INVOICE_NO'].unique()

nunique= datas['INVOICE_NO'].nunique()
nunique

sum = datas['AMOUNT_AFTER_TAX'].sum()

aov = sum / nunique
aov

#Average Order Value = total amount/Total Orders
datas["AMOUNT_AFTER_TAX"].sum()/datas["INVOICE_NO"].nunique()

datas.rename(columns={'AMOUNT_AFTER_TAX':'AMOUNT'},inplace='True')

datas

grouping  = datas.groupby('INVOICE_NO').agg({'INVOICE_NO': lambda x: x.nunique(),
                                            'QUANTITY':lambda x: x.sum(),
                                            'AMOUNT': lambda x: x.sum(),
                                            'PRODUCT':lambda x:x,

})

grouping

import seaborn as sns
import matplotlib.pyplot as plt

top_25 = datas.groupby('PRODUCT')['QUANTITY'].sum().nlargest(25)
sns.barplot( x= top_25.values , y=top_25.index)
plt.ylabel('product_name')
plt.xlabel('Quantity')
plt.title('Top 25 product based on quantity')
plt.xticks(rotation=45)
plt.show

top_25 = datas.groupby('PRODUCT')['AMOUNT'].sum().nlargest(10)
sns.barplot( x= top_25.values , y=top_25.index)
plt.ylabel('product_name')
plt.xlabel('Quantity')
plt.title('Top 25 product based on AMOUNT')
plt.xticks(rotation=45)
plt.show

datas.columns

'CLIENT' in datas.columns

e = datas.groupby(['CLIENT','INVOICE_NO']).sum().sort_values('AMOUNT',ascending=False)[['AMOUNT']][0:25]
e

PR = datas.groupby('PRODUCT').sum().sort_values('DISCOUNT',ascending=False)[['DISCOUNT']][0:10]
PR

lo = datas.groupby('INVOICE_NO').sum().sort_values('AMOUNT',ascending=True)
lo

p = datas.groupby('PRODUCT').sum().sort_values(['QUANTITY','AMOUNT'],ascending=False)[['QUANTITY','AMOUNT']][0:20]
p

new = datas[(datas['PRODUCT'] == 'Watermelon Juice')].sort_values(['QUANTITY'])
new

new1 = datas[(datas['CLIENT']== 'Swetha') & (datas['PRODUCT']=='Musambi juice')]
new1



